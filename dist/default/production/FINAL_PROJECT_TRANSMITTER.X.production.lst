

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 12 11:17:15 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4331
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Generated 17/10/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4331 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	idataCOMRAM
    59   00047A                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _send_message
    63   00047A  01                 	db	1
    64                           
    65                           ;initializer for _message_start
    66   00047B  FF                 	db	255
    67   000000                     _ADRESL	set	4035
    68   000000                     _ADRESH	set	4036
    69                           
    70                           	psect	nvCOMRAM
    71   000013                     __pnvCOMRAM:
    72                           	callstack 0
    73   000013                     _drive_dir:
    74                           	callstack 0
    75   000013                     	ds	1
    76   000000                     _SSPEN	set	32309
    77   000000                     _SSPM3	set	32307
    78   000000                     _SSPM2	set	32306
    79   000000                     _SSPM1	set	32305
    80   000000                     _SSPM0	set	32304
    81   000000                     _CKE	set	32318
    82   000000                     _TRISC5	set	31909
    83   000000                     _TRISC7	set	31911
    84   000000                     _ADON	set	32272
    85   000000                     _ADFM	set	32263
    86   000000                     _PEIE	set	32662
    87   000000                     _ADCS2	set	32258
    88   000000                     _ADCS1	set	32257
    89   000000                     _ACONV	set	32277
    90   000000                     _GASEL1	set	31945
    91   000000                     _VCFG1	set	32271
    92   000000                     _ADIF	set	31990
    93   000000                     _IRCF2	set	32414
    94   000000                     _IRCF1	set	32413
    95   000000                     _RD0	set	31768
    96   000000                     _TRISD0	set	31912
    97   000000                     _IRCF0	set	32412
    98   000000                     _GIE	set	32663
    99   000000                     _SSPBUF	set	4041
   100   000000                     _GASEL0	set	31944
   101   000000                     _ADIE	set	31982
   102   000000                     _SSPIF	set	31987
   103   000000                     _IPEN	set	32391
   104   000000                     _TRISC4	set	31908
   105   000000                     _ADIP	set	31998
   106   000000                     _ANS4	set	32196
   107   000000                     _GODONE	set	32273
   108   000000                     _CKP	set	32308
   109   000000                     _SMP	set	32319
   110   000000                     _ADCS0	set	32256
   111   000000                     _VCFG0	set	32270
   112                           
   113                           ; #config settings
   114                           
   115                           	psect	cinit
   116   000404                     __pcinit:
   117                           	callstack 0
   118   000404                     start_initialization:
   119                           	callstack 0
   120   000404                     __initialization:
   121                           	callstack 0
   122                           
   123                           ; Initialize objects allocated to COMRAM (2 bytes)
   124                           ; load TBLPTR registers with __pidataCOMRAM
   125   000404  0E7A               	movlw	low __pidataCOMRAM
   126   000406  6EF6               	movwf	tblptrl,c
   127   000408  0E04               	movlw	high __pidataCOMRAM
   128   00040A  6EF7               	movwf	tblptrh,c
   129   00040C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   130   00040E  6EF8               	movwf	tblptru,c
   131   000410  0009               	tblrd		*+	;fetch initializer
   132   000412  CFF5 F011          	movff	tablat,__pdataCOMRAM
   133   000416  0009               	tblrd		*+	;fetch initializer
   134   000418  CFF5 F012          	movff	tablat,__pdataCOMRAM+1
   135                           
   136                           ; Clear objects allocated to COMRAM (6 bytes)
   137   00041C  6A10               	clrf	(__pbssCOMRAM+5)& (0+255),c
   138   00041E  6A0F               	clrf	(__pbssCOMRAM+4)& (0+255),c
   139   000420  6A0E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   140   000422  6A0D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   141   000424  6A0C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   142   000426  6A0B               	clrf	__pbssCOMRAM& (0+255),c
   143   000428                     end_of_initialization:
   144                           	callstack 0
   145   000428                     __end_of__initialization:
   146                           	callstack 0
   147   000428  9014               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   148   00042A  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   149   00042C  0100               	movlb	0
   150   00042E  EF81  F001         	goto	_main	;jump to C main() function
   151                           
   152                           	psect	bssCOMRAM
   153   00000B                     __pbssCOMRAM:
   154                           	callstack 0
   155   00000B                     _message_start_flag:
   156                           	callstack 0
   157   00000B                     	ds	1
   158   00000C                     _drive_dir_flag:
   159                           	callstack 0
   160   00000C                     	ds	1
   161   00000D                     _adc_hib_flag:
   162                           	callstack 0
   163   00000D                     	ds	1
   164   00000E                     _adc_lob_flag:
   165                           	callstack 0
   166   00000E                     	ds	1
   167   00000F                     _adc_res_lo:
   168                           	callstack 0
   169   00000F                     	ds	1
   170   000010                     _adc_res_hi:
   171                           	callstack 0
   172   000010                     	ds	1
   173                           
   174                           	psect	dataCOMRAM
   175   000011                     __pdataCOMRAM:
   176                           	callstack 0
   177   000011                     _send_message:
   178                           	callstack 0
   179   000011                     	ds	1
   180   000012                     _message_start:
   181                           	callstack 0
   182   000012                     	ds	1
   183                           
   184                           	psect	cstackCOMRAM
   185   000001                     __pcstackCOMRAM:
   186                           	callstack 0
   187   000001                     delay@end:
   188                           	callstack 0
   189                           
   190                           ; 2 bytes @ 0x0
   191   000001                     	ds	2
   192   000003                     ??_delay:
   193                           
   194                           ; 1 bytes @ 0x2
   195   000003                     	ds	1
   196   000004                     delay@i:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x3
   200   000004                     	ds	2
   201   000006                     
   202                           ; 2 bytes @ 0x5
   203   000006                     	ds	2
   204   000008                     
   205                           ; 3 bytes @ 0x7
   206   000008                     	ds	3
   207   00000B                     
   208                           ; 1 bytes @ 0xA
   209 ;;
   210 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   211 ;;
   212 ;; *************** function _main *****************
   213 ;; Defined at:
   214 ;;		line 99 in file "transmitter_main.c"
   215 ;; Parameters:    Size  Location     Type
   216 ;;  argc            2    5[COMRAM] int 
   217 ;;  argv            3    7[COMRAM] PTR PTR unsigned char 
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;                  2    5[COMRAM] int 
   222 ;; Registers used:
   223 ;;		wreg, status,2, status,0, cstack
   224 ;; Tracked objects:
   225 ;;		On entry : 0/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   229 ;;      Params:         5       0       0       0
   230 ;;      Locals:         0       0       0       0
   231 ;;      Temps:          0       0       0       0
   232 ;;      Totals:         5       0       0       0
   233 ;;Total ram usage:        5 bytes
   234 ;; Hardware stack levels required when called: 2
   235 ;; This function calls:
   236 ;;		_adc_init
   237 ;;		_delay
   238 ;;		_message_transmitted
   239 ;;		_spi_master_init
   240 ;; This function is called by:
   241 ;;		Startup code after reset
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           	psect	text0
   246   000302                     __ptext0:
   247                           	callstack 0
   248   000302                     _main:
   249                           	callstack 29
   250   000302                     
   251                           ;transmitter_main.c: 99: int main( int argc, char** argv );transmitter_main.c: 100: {;tr
      +                          ansmitter_main.c: 102:     IRCF0 = 0;
   252   000302  98D3               	bcf	4051,4,c	;volatile
   253                           
   254                           ;transmitter_main.c: 103:     IRCF1 = 1;
   255   000304  8AD3               	bsf	4051,5,c	;volatile
   256                           
   257                           ;transmitter_main.c: 104:     IRCF2 = 1;
   258   000306  8CD3               	bsf	4051,6,c	;volatile
   259                           
   260                           ;transmitter_main.c: 106:     TRISD0 = 1;
   261   000308  8095               	bsf	3989,0,c	;volatile
   262   00030A                     
   263                           ;transmitter_main.c: 108:     adc_init();
   264   00030A  EC19  F002         	call	_adc_init	;wreg free
   265                           
   266                           ;transmitter_main.c: 109:     spi_master_init();
   267   00030E  EC2C  F002         	call	_spi_master_init	;wreg free
   268   000312                     
   269                           ;transmitter_main.c: 111:     SSPBUF = 0b00000000;
   270   000312  0E00               	movlw	0
   271   000314  6EC9               	movwf	201,c	;volatile
   272   000316                     l917:
   273                           
   274                           ;transmitter_main.c: 114:     {;transmitter_main.c: 115:         drive_dir = RD0;
   275   000316  0E00               	movlw	0
   276   000318  B083               	btfsc	3971,0,c	;volatile
   277   00031A  0E01               	movlw	1
   278   00031C  6E13               	movwf	_drive_dir^0,c
   279   00031E                     
   280                           ;transmitter_main.c: 116:         if ( send_message )
   281   00031E  5011               	movf	_send_message^0,w,c
   282   000320  B4D8               	btfsc	status,2,c
   283   000322  EF95  F001         	goto	u111
   284   000326  EF97  F001         	goto	u110
   285   00032A                     u111:
   286   00032A  EF8B  F001         	goto	l917
   287   00032E                     u110:
   288   00032E                     
   289                           ;transmitter_main.c: 117:         {;transmitter_main.c: 118:             delay(50);
   290   00032E  0E00               	movlw	0
   291   000330  6E02               	movwf	(delay@end+1)^0,c
   292   000332  0E32               	movlw	50
   293   000334  6E01               	movwf	delay@end^0,c
   294   000336  ECEA  F001         	call	_delay	;wreg free
   295   00033A                     
   296                           ;transmitter_main.c: 119:             if( SSPIF )
   297   00033A  A69E               	btfss	3998,3,c	;volatile
   298   00033C  EFA2  F001         	goto	u121
   299   000340  EFA4  F001         	goto	u120
   300   000344                     u121:
   301   000344  EF8B  F001         	goto	l917
   302   000348                     u120:
   303   000348                     
   304                           ;transmitter_main.c: 121:             {;transmitter_main.c: 122:                 if ( !m
      +                          essage_start_flag )
   305   000348  500B               	movf	_message_start_flag^0,w,c
   306   00034A  A4D8               	btfss	status,2,c
   307   00034C  EFAA  F001         	goto	u131
   308   000350  EFAC  F001         	goto	u130
   309   000354                     u131:
   310   000354  EFB2  F001         	goto	l933
   311   000358                     u130:
   312   000358                     
   313                           ;transmitter_main.c: 123:                 {;transmitter_main.c: 124:                    
      +                           SSPBUF = message_start;
   314   000358  68C9               	setf	201,c	;volatile
   315   00035A                     
   316                           ;transmitter_main.c: 125:                     message_start_flag = 1;
   317   00035A  0E01               	movlw	1
   318   00035C  6E0B               	movwf	_message_start_flag^0,c
   319   00035E                     l931:
   320                           
   321                           ;transmitter_main.c: 126:                     SSPIF = 0;
   322   00035E  969E               	bcf	3998,3,c	;volatile
   323                           
   324                           ;transmitter_main.c: 127:                 }
   325   000360  EF8B  F001         	goto	l917
   326   000364                     l933:
   327   000364  500E               	movf	_adc_lob_flag^0,w,c
   328   000366  A4D8               	btfss	status,2,c
   329   000368  EFB8  F001         	goto	u141
   330   00036C  EFBA  F001         	goto	u140
   331   000370                     u141:
   332   000370  EFC0  F001         	goto	l941
   333   000374                     u140:
   334   000374                     
   335                           ;transmitter_main.c: 129:                 {;transmitter_main.c: 130:                    
      +                           SSPBUF = adc_res_lo;
   336   000374  C00F  FFC9         	movff	_adc_res_lo,4041	;volatile
   337   000378                     
   338                           ;transmitter_main.c: 131:                     adc_lob_flag = 1;
   339   000378  0E01               	movlw	1
   340   00037A  6E0E               	movwf	_adc_lob_flag^0,c
   341   00037C  EFAF  F001         	goto	l931
   342   000380                     l941:
   343   000380  500D               	movf	_adc_hib_flag^0,w,c
   344   000382  A4D8               	btfss	status,2,c
   345   000384  EFC6  F001         	goto	u151
   346   000388  EFC8  F001         	goto	u150
   347   00038C                     u151:
   348   00038C  EFCE  F001         	goto	l949
   349   000390                     u150:
   350   000390                     
   351                           ;transmitter_main.c: 135:                 {;transmitter_main.c: 136:                    
      +                           SSPBUF = adc_res_hi;
   352   000390  C010  FFC9         	movff	_adc_res_hi,4041	;volatile
   353   000394                     
   354                           ;transmitter_main.c: 137:                     adc_hib_flag = 1;
   355   000394  0E01               	movlw	1
   356   000396  6E0D               	movwf	_adc_hib_flag^0,c
   357   000398  EFAF  F001         	goto	l931
   358   00039C                     l949:
   359   00039C  500C               	movf	_drive_dir_flag^0,w,c
   360   00039E  A4D8               	btfss	status,2,c
   361   0003A0  EFD4  F001         	goto	u161
   362   0003A4  EFD6  F001         	goto	u160
   363   0003A8                     u161:
   364   0003A8  EFE6  F001         	goto	l59
   365   0003AC                     u160:
   366   0003AC                     
   367                           ;transmitter_main.c: 141:                 {;transmitter_main.c: 142:                    
      +                           SSPBUF = drive_dir;
   368   0003AC  C013  FFC9         	movff	_drive_dir,4041	;volatile
   369   0003B0                     
   370                           ;transmitter_main.c: 143:                     drive_dir_flag = 1;
   371   0003B0  0E01               	movlw	1
   372   0003B2  6E0C               	movwf	_drive_dir_flag^0,c
   373   0003B4                     
   374                           ;transmitter_main.c: 144:                     SSPIF = 0;
   375   0003B4  969E               	bcf	3998,3,c	;volatile
   376   0003B6                     
   377                           ;transmitter_main.c: 146:                     message_transmitted();
   378   0003B6  EC38  F002         	call	_message_transmitted	;wreg free
   379   0003BA                     
   380                           ;transmitter_main.c: 147:                     GODONE = 1;
   381   0003BA  82C2               	bsf	4034,1,c	;volatile
   382   0003BC                     
   383                           ;transmitter_main.c: 148:                     delay(1000);
   384   0003BC  0E03               	movlw	3
   385   0003BE  6E02               	movwf	(delay@end+1)^0,c
   386   0003C0  0EE8               	movlw	232
   387   0003C2  6E01               	movwf	delay@end^0,c
   388   0003C4  ECEA  F001         	call	_delay	;wreg free
   389   0003C8  EF8B  F001         	goto	l917
   390   0003CC                     l59:
   391   0003CC  EF8B  F001         	goto	l917
   392   0003D0  EF21  F000         	goto	start
   393   0003D4                     __end_of_main:
   394                           	callstack 0
   395                           
   396 ;; *************** function _spi_master_init *****************
   397 ;; Defined at:
   398 ;;		line 5 in file "spi.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;		None
   401 ;; Auto vars:     Size  Location     Type
   402 ;;		None
   403 ;; Return value:  Size  Location     Type
   404 ;;                  1    wreg      void 
   405 ;; Registers used:
   406 ;;		None
   407 ;; Tracked objects:
   408 ;;		On entry : 0/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   412 ;;      Params:         0       0       0       0
   413 ;;      Locals:         0       0       0       0
   414 ;;      Temps:          0       0       0       0
   415 ;;      Totals:         0       0       0       0
   416 ;;Total ram usage:        0 bytes
   417 ;; Hardware stack levels used: 1
   418 ;; Hardware stack levels required when called: 1
   419 ;; This function calls:
   420 ;;		Nothing
   421 ;; This function is called by:
   422 ;;		_main
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426                           	psect	text1
   427   000458                     __ptext1:
   428                           	callstack 0
   429   000458                     _spi_master_init:
   430                           	callstack 29
   431   000458                     
   432                           ;spi.c: 7:     TRISC4 = 1;
   433   000458  8894               	bsf	3988,4,c	;volatile
   434                           
   435                           ;spi.c: 8:     TRISC7 = 0;
   436   00045A  9E94               	bcf	3988,7,c	;volatile
   437                           
   438                           ;spi.c: 9:     TRISC5 = 0;
   439   00045C  9A94               	bcf	3988,5,c	;volatile
   440                           
   441                           ;spi.c: 11:     SMP = 1;
   442   00045E  8EC7               	bsf	4039,7,c	;volatile
   443                           
   444                           ;spi.c: 12:     CKP = 0;
   445   000460  98C6               	bcf	4038,4,c	;volatile
   446                           
   447                           ;spi.c: 13:     CKE = 0;
   448   000462  9CC7               	bcf	4039,6,c	;volatile
   449                           
   450                           ;spi.c: 17:     SSPM0 = 0;
   451   000464  90C6               	bcf	4038,0,c	;volatile
   452                           
   453                           ;spi.c: 18:     SSPM1 = 0;
   454   000466  92C6               	bcf	4038,1,c	;volatile
   455                           
   456                           ;spi.c: 19:     SSPM2 = 0;
   457   000468  94C6               	bcf	4038,2,c	;volatile
   458                           
   459                           ;spi.c: 20:     SSPM3 = 0;
   460   00046A  96C6               	bcf	4038,3,c	;volatile
   461                           
   462                           ;spi.c: 22:     SSPEN = 1;
   463   00046C  8AC6               	bsf	4038,5,c	;volatile
   464   00046E  0012               	return		;funcret
   465   000470                     __end_of_spi_master_init:
   466                           	callstack 0
   467                           
   468 ;; *************** function _message_transmitted *****************
   469 ;; Defined at:
   470 ;;		line 174 in file "transmitter_main.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;		None
   473 ;; Auto vars:     Size  Location     Type
   474 ;;		None
   475 ;; Return value:  Size  Location     Type
   476 ;;                  1    wreg      void 
   477 ;; Registers used:
   478 ;;		wreg, status,2
   479 ;; Tracked objects:
   480 ;;		On entry : 0/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   484 ;;      Params:         0       0       0       0
   485 ;;      Locals:         0       0       0       0
   486 ;;      Temps:          0       0       0       0
   487 ;;      Totals:         0       0       0       0
   488 ;;Total ram usage:        0 bytes
   489 ;; Hardware stack levels used: 1
   490 ;; Hardware stack levels required when called: 1
   491 ;; This function calls:
   492 ;;		Nothing
   493 ;; This function is called by:
   494 ;;		_main
   495 ;; This function uses a non-reentrant model
   496 ;;
   497                           
   498                           	psect	text2
   499   000470                     __ptext2:
   500                           	callstack 0
   501   000470                     _message_transmitted:
   502                           	callstack 29
   503   000470                     
   504                           ;transmitter_main.c: 176:     message_start_flag = 0;
   505   000470  0E00               	movlw	0
   506   000472  6E0B               	movwf	_message_start_flag^0,c
   507                           
   508                           ;transmitter_main.c: 177:     drive_dir_flag = 0;
   509   000474  0E00               	movlw	0
   510   000476  6E0C               	movwf	_drive_dir_flag^0,c
   511   000478  0012               	return		;funcret
   512   00047A                     __end_of_message_transmitted:
   513                           	callstack 0
   514                           
   515 ;; *************** function _delay *****************
   516 ;; Defined at:
   517 ;;		line 181 in file "transmitter_main.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;  end             2    0[COMRAM] int 
   520 ;; Auto vars:     Size  Location     Type
   521 ;;  i               2    3[COMRAM] int 
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      void 
   524 ;; Registers used:
   525 ;;		wreg, status,2, status,0
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   531 ;;      Params:         2       0       0       0
   532 ;;      Locals:         2       0       0       0
   533 ;;      Temps:          1       0       0       0
   534 ;;      Totals:         5       0       0       0
   535 ;;Total ram usage:        5 bytes
   536 ;; Hardware stack levels used: 1
   537 ;; Hardware stack levels required when called: 1
   538 ;; This function calls:
   539 ;;		Nothing
   540 ;; This function is called by:
   541 ;;		_main
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           	psect	text3
   546   0003D4                     __ptext3:
   547                           	callstack 0
   548   0003D4                     _delay:
   549                           	callstack 29
   550   0003D4                     
   551                           ;transmitter_main.c: 181: void delay(int end);transmitter_main.c: 182: {;transmitter_mai
      +                          n.c: 183:     int i;;transmitter_main.c: 184:     for( i = 0; i < end; i++ )
   552   0003D4  0E00               	movlw	0
   553   0003D6  6E05               	movwf	(delay@i+1)^0,c
   554   0003D8  0E00               	movlw	0
   555   0003DA  6E04               	movwf	delay@i^0,c
   556   0003DC  EFF2  F001         	goto	l909
   557   0003E0                     l907:
   558                           
   559                           ;transmitter_main.c: 185:     {;transmitter_main.c: 187:     }
   560   0003E0  4A04               	infsnz	delay@i^0,f,c
   561   0003E2  2A05               	incf	(delay@i+1)^0,f,c
   562   0003E4                     l909:
   563   0003E4  5001               	movf	delay@end^0,w,c
   564   0003E6  5C04               	subwf	delay@i^0,w,c
   565   0003E8  5005               	movf	(delay@i+1)^0,w,c
   566   0003EA  0A80               	xorlw	128
   567   0003EC  6E03               	movwf	??_delay^0,c
   568   0003EE  5002               	movf	(delay@end+1)^0,w,c
   569   0003F0  0A80               	xorlw	128
   570   0003F2  5803               	subwfb	??_delay^0,w,c
   571   0003F4  A0D8               	btfss	status,0,c
   572   0003F6  EFFF  F001         	goto	u101
   573   0003FA  EF01  F002         	goto	u100
   574   0003FE                     u101:
   575   0003FE  EFF0  F001         	goto	l907
   576   000402                     u100:
   577   000402  0012               	return		;funcret
   578   000404                     __end_of_delay:
   579                           	callstack 0
   580                           
   581 ;; *************** function _adc_init *****************
   582 ;; Defined at:
   583 ;;		line 5 in file "adc.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;		None
   586 ;; Auto vars:     Size  Location     Type
   587 ;;		None
   588 ;; Return value:  Size  Location     Type
   589 ;;                  1    wreg      void 
   590 ;; Registers used:
   591 ;;		None
   592 ;; Tracked objects:
   593 ;;		On entry : 0/0
   594 ;;		On exit  : 0/0
   595 ;;		Unchanged: 0/0
   596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   597 ;;      Params:         0       0       0       0
   598 ;;      Locals:         0       0       0       0
   599 ;;      Temps:          0       0       0       0
   600 ;;      Totals:         0       0       0       0
   601 ;;Total ram usage:        0 bytes
   602 ;; Hardware stack levels used: 1
   603 ;; Hardware stack levels required when called: 1
   604 ;; This function calls:
   605 ;;		Nothing
   606 ;; This function is called by:
   607 ;;		_main
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           	psect	text4
   612   000432                     __ptext4:
   613                           	callstack 0
   614   000432                     _adc_init:
   615                           	callstack 29
   616   000432                     
   617                           ;adc.c: 8:     ANS4 = 1;
   618   000432  88B8               	bsf	4024,4,c	;volatile
   619                           
   620                           ;adc.c: 11:     VCFG0 = 0;
   621   000434  9CC1               	bcf	4033,6,c	;volatile
   622                           
   623                           ;adc.c: 12:     VCFG1 = 0;
   624   000436  9EC1               	bcf	4033,7,c	;volatile
   625                           
   626                           ;adc.c: 15:     GASEL0 = 1;
   627   000438  8099               	bsf	3993,0,c	;volatile
   628                           
   629                           ;adc.c: 16:     GASEL1 = 0;
   630   00043A  9299               	bcf	3993,1,c	;volatile
   631                           
   632                           ;adc.c: 19:     ACONV = 1;
   633   00043C  8AC2               	bsf	4034,5,c	;volatile
   634                           
   635                           ;adc.c: 22:     ADCS0 = 1;
   636   00043E  80C0               	bsf	4032,0,c	;volatile
   637                           
   638                           ;adc.c: 23:     ADCS1 = 1;
   639   000440  82C0               	bsf	4032,1,c	;volatile
   640                           
   641                           ;adc.c: 24:     ADCS2 = 1;
   642   000442  84C0               	bsf	4032,2,c	;volatile
   643                           
   644                           ;adc.c: 27:     IPEN = 1;
   645   000444  8ED0               	bsf	4048,7,c	;volatile
   646                           
   647                           ;adc.c: 28:     GIE = 1;
   648   000446  8EF2               	bsf	4082,7,c	;volatile
   649                           
   650                           ;adc.c: 29:     PEIE = 1;
   651   000448  8CF2               	bsf	4082,6,c	;volatile
   652                           
   653                           ;adc.c: 30:     ADIE = 1;
   654   00044A  8C9D               	bsf	3997,6,c	;volatile
   655                           
   656                           ;adc.c: 31:     ADIF = 0;
   657   00044C  9C9E               	bcf	3998,6,c	;volatile
   658                           
   659                           ;adc.c: 34:     ADIP = 1;
   660   00044E  8C9F               	bsf	3999,6,c	;volatile
   661                           
   662                           ;adc.c: 37:     ADFM = 1;
   663   000450  8EC0               	bsf	4032,7,c	;volatile
   664                           
   665                           ;adc.c: 40:     ADON = 1;
   666   000452  80C2               	bsf	4034,0,c	;volatile
   667                           
   668                           ;adc.c: 41:     GODONE = 1;
   669   000454  82C2               	bsf	4034,1,c	;volatile
   670   000456  0012               	return		;funcret
   671   000458                     __end_of_adc_init:
   672                           	callstack 0
   673                           
   674 ;; *************** function _h_isr *****************
   675 ;; Defined at:
   676 ;;		line 157 in file "transmitter_main.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;		None
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, status,2
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   690 ;;      Params:         0       0       0       0
   691 ;;      Locals:         0       0       0       0
   692 ;;      Temps:          0       0       0       0
   693 ;;      Totals:         0       0       0       0
   694 ;;Total ram usage:        0 bytes
   695 ;; Hardware stack levels used: 1
   696 ;; This function calls:
   697 ;;		Nothing
   698 ;; This function is called by:
   699 ;;		Interrupt level 2
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           	psect	intcode
   704   000008                     __pintcode:
   705                           	callstack 0
   706   000008                     _h_isr:
   707                           	callstack 29
   708                           
   709                           ;incstack = 0
   710   000008  8214               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   711   00000A                     
   712                           ;transmitter_main.c: 159:     if ( ADIE && ADIF )
   713   00000A  AC9D               	btfss	3997,6,c	;volatile
   714   00000C  EF0A  F000         	goto	i2u8_41
   715   000010  EF0C  F000         	goto	i2u8_40
   716   000014                     i2u8_41:
   717   000014  EF1F  F000         	goto	i2l73
   718   000018                     i2u8_40:
   719   000018  AC9E               	btfss	3998,6,c	;volatile
   720   00001A  EF11  F000         	goto	i2u9_41
   721   00001E  EF13  F000         	goto	i2u9_40
   722   000022                     i2u9_41:
   723   000022  EF1F  F000         	goto	i2l73
   724   000026                     i2u9_40:
   725   000026                     
   726                           ;transmitter_main.c: 160:     {;transmitter_main.c: 161:         send_message = 1;
   727   000026  0E01               	movlw	1
   728   000028  6E11               	movwf	_send_message^0,c
   729   00002A                     
   730                           ;transmitter_main.c: 163:         adc_res_hi = ADRESH;
   731   00002A  CFC4 F010          	movff	4036,_adc_res_hi	;volatile
   732   00002E                     
   733                           ;transmitter_main.c: 164:         adc_res_lo = ADRESL;
   734   00002E  CFC3 F00F          	movff	4035,_adc_res_lo	;volatile
   735                           
   736                           ;transmitter_main.c: 165:         adc_lob_flag = 0;
   737   000032  0E00               	movlw	0
   738   000034  6E0E               	movwf	_adc_lob_flag^0,c
   739                           
   740                           ;transmitter_main.c: 166:         adc_hib_flag = 0;
   741   000036  0E00               	movlw	0
   742   000038  6E0D               	movwf	_adc_hib_flag^0,c
   743   00003A                     
   744                           ;transmitter_main.c: 168:         ADIF = 0;
   745   00003A  9C9E               	bcf	3998,6,c	;volatile
   746   00003C                     
   747                           ;transmitter_main.c: 169:         GODONE = 0;
   748   00003C  92C2               	bcf	4034,1,c	;volatile
   749   00003E                     i2l73:
   750   00003E  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   751   000040  0011               	retfie		f
   752   000042                     __end_of_h_isr:
   753                           	callstack 0
   754                           
   755                           	psect	smallconst
   756   000300                     __psmallconst:
   757                           	callstack 0
   758   000300  00                 	db	0
   759   000301  00                 	db	0	; dummy byte at the end
   760   000000                     
   761                           	psect	rparam
   762   000000                     
   763                           	psect	temp
   764   000014                     btemp:
   765                           	callstack 0
   766   000014                     	ds	1
   767   000000                     int$flags	set	btemp
   768   000000                     wtemp8	set	btemp+1
   769   000000                     ttemp5	set	btemp+1
   770   000000                     ttemp6	set	btemp+4
   771   000000                     ttemp7	set	btemp+8
   772                           
   773                           	psect	config
   774                           
   775                           ; Padding undefined space
   776   300000                     	org	3145728
   777   300000  FF                 	db	255
   778                           
   779                           ;Config register CONFIG1H @ 0x300001
   780                           ;	Oscillator Selection bits
   781                           ;	OSC = IRC, Internal oscillator block, CLKO function on RA6 and port function on RA7
   782                           ;	Fail-Safe Clock Monitor Enable bit
   783                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
   784                           ;	Internal External Oscillator Switchover bit
   785                           ;	IESO = ON, Internal External Switchover mode enabled
   786   300001                     	org	3145729
   787   300001  C9                 	db	201
   788                           
   789                           ;Config register CONFIG2L @ 0x300002
   790                           ;	Power-up Timer Enable bit
   791                           ;	PWRTEN = ON, PWRT enabled
   792                           ;	Brown-out Reset Enable bits
   793                           ;	BOREN = ON, Brown-out Reset enabled
   794                           ;	Brown Out Reset Voltage bits
   795                           ;	BORV = 0x3, unprogrammed default
   796   300002                     	org	3145730
   797   300002  0E                 	db	14
   798                           
   799                           ;Config register CONFIG2H @ 0x300003
   800                           ;	Watchdog Timer Enable bit
   801                           ;	WDTEN = OFF, WDT disabled (control is placed on the SWDTEN bit)
   802                           ;	Watchdog Timer Postscale Select bits
   803                           ;	WDPS = 32768, 1:32768
   804                           ;	Watchdog Timer Window Enable bit
   805                           ;	WINEN = OFF, WDT window disabled
   806   300003                     	org	3145731
   807   300003  3E                 	db	62
   808                           
   809                           ;Config register CONFIG3L @ 0x300004
   810                           ;	PWM output pins Reset state control
   811                           ;	PWMPIN = OFF, PWM outputs disabled upon Reset (default)
   812                           ;	Low-Side Transistors Polarity
   813                           ;	LPOL = HIGH, PWM0, 2, 4 and 6 are active-high
   814                           ;	High-Side Transistors Polarity
   815                           ;	HPOL = HIGH, PWM1, 3, 5 and 7 are active-high
   816                           ;	Timer1 Oscillator MUX
   817                           ;	T1OSCMX = ON, Low-power Timer1 operation when microcontroller is in Sleep mode
   818   300004                     	org	3145732
   819   300004  3C                 	db	60
   820                           
   821                           ;Config register CONFIG3H @ 0x300005
   822                           ;	FLTA MUX bit
   823                           ;	FLTAMX = RC1, FLTA input is multiplexed with RC1
   824                           ;	SSP I/O MUX bit
   825                           ;	SSPMX = RC7, SCK/SCL clocks and SDA/SDI data are multiplexed with RC5 and RC4, respect
      +                          ively. SDO output is multiplexed with RC7.
   826                           ;	PWM4 MUX bit
   827                           ;	PWM4MX = RB5, PWM4 output is multiplexed with RB5
   828                           ;	TMR0/T5CKI External clock MUX bit
   829                           ;	EXCLKMX = RC3, TMR0/T5CKI external clock input is multiplexed with RC3
   830                           ;	MCLR Pin Enable bit
   831                           ;	MCLRE = ON, Enabled
   832   300005                     	org	3145733
   833   300005  9D                 	db	157
   834                           
   835                           ;Config register CONFIG4L @ 0x300006
   836                           ;	Stack Full/Underflow Reset Enable bit
   837                           ;	STVREN = ON, Stack full/underflow will cause Reset
   838                           ;	Low-Voltage ICSP Enable bit
   839                           ;	LVP = OFF, Low-voltage ICSP disabled
   840                           ;	Background Debugger Enable bit
   841                           ;	DEBUG = 0x1, unprogrammed default
   842   300006                     	org	3145734
   843   300006  81                 	db	129
   844                           
   845                           ; Padding undefined space
   846   300007                     	org	3145735
   847   300007  FF                 	db	255
   848                           
   849                           ;Config register CONFIG5L @ 0x300008
   850                           ;	Code Protection bit
   851                           ;	CP0 = OFF, Block 0 (000200-000FFFh) not code-protected
   852                           ;	Code Protection bit
   853                           ;	CP1 = OFF, Block 1 (001000-001FFF) not code-protected
   854   300008                     	org	3145736
   855   300008  0F                 	db	15
   856                           
   857                           ;Config register CONFIG5H @ 0x300009
   858                           ;	Boot Block Code Protection bit
   859                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code-protected
   860                           ;	Data EEPROM Code Protection bit
   861                           ;	CPD = OFF, Data EEPROM not code-protected
   862   300009                     	org	3145737
   863   300009  C0                 	db	192
   864                           
   865                           ;Config register CONFIG6L @ 0x30000A
   866                           ;	Write Protection bit
   867                           ;	WRT0 = OFF, Block 0 (000200-000FFFh) not write-protected
   868                           ;	Write Protection bit
   869                           ;	WRT1 = OFF, Block 1 (001000-001FFF) not write-protected
   870   30000A                     	org	3145738
   871   30000A  0F                 	db	15
   872                           
   873                           ;Config register CONFIG6H @ 0x30000B
   874                           ;	Configuration Register Write Protection bit
   875                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   876                           ;	Boot Block Write Protection bit
   877                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write-protected
   878                           ;	Data EEPROM Write Protection bit
   879                           ;	WRTD = OFF, Data EEPROM not write-protected
   880   30000B                     	org	3145739
   881   30000B  E0                 	db	224
   882                           
   883                           ;Config register CONFIG7L @ 0x30000C
   884                           ;	Table Read Protection bit
   885                           ;	EBTR0 = OFF, Block 0 (000200-000FFFh) not protected from table reads executed in other
      +                           blocks
   886                           ;	Table Read Protection bit
   887                           ;	EBTR1 = OFF, Block 1 (001000-001FFF) not protected from table reads executed in other 
      +                          blocks
   888   30000C                     	org	3145740
   889   30000C  0F                 	db	15
   890                           
   891                           ;Config register CONFIG7H @ 0x30000D
   892                           ;	Boot Block Table Read Protection bit
   893                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from table reads executed in ot
      +                          her blocks
   894   30000D                     	org	3145741
   895   30000D  40                 	db	64
   896                           tosu	equ	0xFFF
   897                           tosh	equ	0xFFE
   898                           tosl	equ	0xFFD
   899                           stkptr	equ	0xFFC
   900                           pclatu	equ	0xFFB
   901                           pclath	equ	0xFFA
   902                           pcl	equ	0xFF9
   903                           tblptru	equ	0xFF8
   904                           tblptrh	equ	0xFF7
   905                           tblptrl	equ	0xFF6
   906                           tablat	equ	0xFF5
   907                           prodh	equ	0xFF4
   908                           prodl	equ	0xFF3
   909                           indf0	equ	0xFEF
   910                           postinc0	equ	0xFEE
   911                           postdec0	equ	0xFED
   912                           preinc0	equ	0xFEC
   913                           plusw0	equ	0xFEB
   914                           fsr0h	equ	0xFEA
   915                           fsr0l	equ	0xFE9
   916                           wreg	equ	0xFE8
   917                           indf1	equ	0xFE7
   918                           postinc1	equ	0xFE6
   919                           postdec1	equ	0xFE5
   920                           preinc1	equ	0xFE4
   921                           plusw1	equ	0xFE3
   922                           fsr1h	equ	0xFE2
   923                           fsr1l	equ	0xFE1
   924                           bsr	equ	0xFE0
   925                           indf2	equ	0xFDF
   926                           postinc2	equ	0xFDE
   927                           postdec2	equ	0xFDD
   928                           preinc2	equ	0xFDC
   929                           plusw2	equ	0xFDB
   930                           fsr2h	equ	0xFDA
   931                           fsr2l	equ	0xFD9
   932                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         6
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     10      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_delay

Critical Paths under _h_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _h_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _h_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _h_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5     198
                                              5 COMRAM     5     0      5
                           _adc_init
                              _delay
                _message_transmitted
                    _spi_master_init
 ---------------------------------------------------------------------------------
 (1) _spi_master_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _message_transmitted                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay                                                5     3      2     198
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _h_isr                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
   _delay
   _message_transmitted
   _spi_master_init

 _h_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      A      13       1       20.2%
BITBIGSFRlll        23      0       0      20        0.0%
BITBIGSFRhl         1E      0       0      10        0.0%
BITBIGSFRlhlhll     18      0       0      16        0.0%
BITBIGSFRllh        10      0       0      19        0.0%
BITBIGSFRhh          D      0       0       9        0.0%
BITBIGSFRlhlhlh      7      0       0      15        0.0%
BITBIGSFRlhhl        6      0       0      12        0.0%
BITBIGSFRlhllh       3      0       0      17        0.0%
BITBIGSFRlhlll       3      0       0      18        0.0%
BITBIGSFRlhhh        2      0       0      11        0.0%
BITBIGSFRlhlhhh      1      0       0      13        0.0%
BITBIGSFRlhlhhh      1      0       0      14        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      13      21        0.0%
DATA                 0      0      13      23        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 12 11:17:15 2024

                         l82 0402                           l59 03CC                           l76 0478  
                        l121 0456                          l146 046E                          l911 0302  
                        l825 0432                          l905 03D4                          l921 032E  
                        l913 030A                          l907 03E0                          l835 0470  
                        l827 0458                          l931 035E                          l923 033A  
                        l915 0312                          l909 03E4                          l941 0380  
                        l933 0364                          l925 0348                          l917 0316  
                        l951 03AC                          l943 0390                          l935 0374  
                        l927 0358                          l919 031E                          _CKE 7E3E  
                        l961 03BC                          l953 03B0                          l945 0394  
                        l937 0378                          l929 035A                          l955 03B4  
                        l957 03B6                          l949 039C                          l959 03BA  
                        _CKP 7E34                          _GIE 7F97                          _RD0 7C18  
                        u100 0402                          u101 03FE                          u110 032E  
                        u111 032A                          u120 0348                          u121 0344  
                        u130 0358                          u131 0354                          u140 0374  
                        u141 0370                          u150 0390                          u151 038C  
                        u160 03AC                          u161 03A8                          _SMP 7E3F  
                       _ADIE 7CEE                         _ADIF 7CF6                         _ADFM 7E07  
                       _ADIP 7CFE                         _ADON 7E10                         _ANS4 7DC4  
                       _IPEN 7E87                         _PEIE 7F96                         i2l73 003E  
                       _main 0302                         btemp 0014                         start 0042  
               ___param_bank 0000                 _adc_hib_flag 000D                        _ADCS0 7E00  
                      _ADCS1 7E01                        _ADCS2 7E02                        ?_main 0006  
                      _ACONV 7E15                        _IRCF0 7E9C                        _IRCF1 7E9D  
                      _IRCF2 7E9E                        i2l901 003C                        i2l891 0018  
                      i2l893 0026                        i2l895 002A                        i2l897 002E  
                      i2l889 000A                        i2l899 003A                        _VCFG0 7E0E  
                      _VCFG1 7E0F                        _SSPM0 7E30                        _SSPM1 7E31  
                      _SSPM2 7E32                        _SSPM3 7E33                        _SSPIF 7CF3  
                      _SSPEN 7E35                 _adc_lob_flag 000E                        _delay 03D4  
                      _h_isr 0008                        tablat 0FF5                        ttemp5 0015  
                      ttemp6 0018                        ttemp7 001C                        status 0FD8  
                      wtemp8 0015              __initialization 0404                 __end_of_main 03D4  
                     ??_main 000B                __activetblptr 0000                       ?_delay 0001  
                     ?_h_isr 0001                       _ADRESH 0FC4                       _ADRESL 0FC3  
                     _GASEL0 7CC8                       _GASEL1 7CC9                       _GODONE 7E11  
           __end_of_adc_init 0458                       i2u8_40 0018                       i2u8_41 0014  
                     i2u9_40 0026                       _TRISD0 7CA8                       i2u9_41 0022  
                     _TRISC4 7CA4                       _TRISC5 7CA5                       _TRISC7 7CA7  
                     _SSPBUF 0FC9                       delay@i 0004                       isa$std 0001  
               __pdataCOMRAM 0011                 __mediumconst 0000                       tblptrh 0FF7  
                     tblptrl 0FF6                       tblptru 0FF8               _drive_dir_flag 000C  
                 __accesstop 0060      __end_of__initialization 0428                ___rparam_used 0001  
             __pcstackCOMRAM 0001                __end_of_delay 0404                __end_of_h_isr 0042  
                 _adc_res_hi 0010                   _adc_res_lo 000F                      ??_delay 0003  
                    ??_h_isr 0001                   __pnvCOMRAM 0013                    ?_adc_init 0001  
                    __Hparam 0000                      __Lparam 0000                 __psmallconst 0300  
                    __pcinit 0404                      __ramtop 0300                   ??_adc_init 0001  
                    __ptext0 0302                      __ptext1 0458                      __ptext2 0470  
                    __ptext3 03D4                      __ptext4 0432                _message_start 0012  
       end_of_initialization 0428            ??_spi_master_init 0001          _message_transmitted 0470  
       ?_message_transmitted 0001                __pidataCOMRAM 047A          start_initialization 0404  
      ??_message_transmitted 0001                  __pbssCOMRAM 000B                    __pintcode 0008  
                __smallconst 0300                    _drive_dir 0013              _spi_master_init 0458  
         _message_start_flag 000B                     __Hrparam 0000                     __Lrparam 0000  
               _send_message 0011                     _adc_init 0432      __end_of_spi_master_init 0470  
                   delay@end 0001                     isa$xinst 0000                     int$flags 0014  
                   main@argc 0006                     main@argv 0008                     intlevel2 0000  
__end_of_message_transmitted 047A             ?_spi_master_init 0001  
